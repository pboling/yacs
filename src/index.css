:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Make anchors inherit color from their container so that elements which set
   color (for example inline color using CSS variables like --accent-up) will
   also color links consistently. This is a global CSS-only fix so no inline
   styles are needed in components. */
a {
  font-weight: 500;
  color: inherit;
  text-decoration: inherit;
}

/* Slight hover treatment for non-themed links; themed links will keep their
   inherited color on hover. */
a:hover {
  color: #535bf2;
}

/* Prevent visited links from showing a persistent visited-style (memory) that
   changes border or color after clicking. Keep visited anchors visually the
   same as unvisited ones by inheriting color and keeping border transparent. */
a:visited {
  color: inherit; /* ensure visited color doesn't differ */
}

/* For our link-like buttons/anchors, ensure :visited doesn't lock-in a border
   or background change. We explicitly reset border-color and background to the
   configured variable so visited links look like non-visited ones. */
.link:visited,
a.link:visited,
.social-links a.link:visited {
  color: inherit;
  background-color: var(--link-bg, #1a1a1a);
  border-color: transparent;
}

/* Ensure social icon links don't get underlined and always inherit their
   surrounding color (used by the Row component's social-links spans). */
.social-links a {
  color: inherit;
  text-decoration: none;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

/* Utility class for icon-like buttons used across the app (for <button class="link">) */
.link {
  /* restore visible button treatment for actual buttons */
  background-color: var(--link-bg, #1a1a1a);
  border: 1px solid transparent;
  padding: 6px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  color: inherit;
  cursor: pointer;
  border-radius: 8px;
  text-decoration: none;
  line-height: 1;
  transition:
    background-color 0.15s ease,
    border-color 0.15s ease;
}
.link:hover {
  background-color: color-mix(in srgb, var(--link-bg, #1a1a1a), white 6%);
  border-color: #646cff;
}

/* Social links: ensure each slot takes up the same fixed space so non-links
   align with links. The span provides the outer box; an anchor with
   class="link" fills that box when present. */
.social-links > span {
  width: 32px;
  height: 32px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 8px;
}

.social-links a.link {
  display: inline-flex;
  width: 100%;
  height: 100%;
  align-items: center;
  justify-content: center;
  padding: 0;
  border-radius: 8px;
  background-color: var(--link-bg, #1a1a1a);
  border: 1px solid transparent;
  text-decoration: none;
  color: inherit;
}

.social-links a.link:hover {
  background-color: color-mix(in srgb, var(--link-bg, #1a1a1a), white 6%);
  border-color: #646cff;
}

.social-links span > svg {
  /* ensure the bare svg (no anchor) doesn't capture pointer events */
  pointer-events: none;
}

/* Keep previous focus outline accessibility rules - prefer :focus-visible so
   keyboard navigation still shows outlines but mouse clicks don't leave a
   persistent visible outline/border. */
.link:focus-visible,
a.link:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

span.no-link {
  cursor: default; /* indicate non-clickable */
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
  /* Light-theme adjustments for link boxes */
  .social-links a.link {
    --link-bg: #f9f9f9;
    background-color: var(--link-bg);
  }
  .social-links a.link:hover {
    border-color: #747bff;
  }
}
